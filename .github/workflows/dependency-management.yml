name: Dependency Management

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    if: github.repository_owner == github.actor # Only run on main repo, not forks
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install pip-tools
        run: pip install pip-tools

      - name: Update Python dependencies
        run: |
          cd backend
          # Create requirements.in if it doesn't exist
          if [ ! -f requirements.in ]; then
            cp requirements.txt requirements.in
          fi
          pip-compile --upgrade requirements.in
          pip-compile --upgrade requirements-dev.in 2>/dev/null || echo "No dev requirements file"

      - name: Update Node.js dependencies
        run: |
          cd frontend
          npm update
          npm audit fix --audit-level moderate || true

      - name: Check for security vulnerabilities
        run: |
          cd backend
          pip install safety
          safety check || echo "Security vulnerabilities found - review required"
          
          cd ../frontend
          npm audit --audit-level high || echo "NPM vulnerabilities found - review required"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'Weekly Dependency Updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated dependency updates:
            
            ### Backend (Python)
            - Updated Python packages to latest compatible versions
            - Checked for security vulnerabilities
            
            ### Frontend (Node.js)
            - Updated NPM packages to latest compatible versions
            - Applied security fixes where possible
            
            ### Review Notes
            - All dependency updates should be backward compatible
            - Test the application thoroughly before merging
            - Check for any breaking changes in the changelog
            
            **Auto-generated by GitHub Actions** ðŸ¤–
          branch: dependency-updates
          delete-branch: true

  license-compliance:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          pip install pip-licenses

      - name: Check Python license compliance
        run: |
          cd backend
          pip-licenses --format=json --output-file=../licenses-python.json
          pip-licenses --fail-on="GPL,AGPL,LGPL" --allow-only="MIT,BSD,Apache,ISC,Unlicense,Public Domain"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci
          npm install -g license-checker

      - name: Check Node.js license compliance
        run: |
          cd frontend
          license-checker --json --out ../licenses-frontend.json
          license-checker --failOn "GPL;AGPL;LGPL" --onlyAllow "MIT;BSD;Apache;ISC;Unlicense;Public Domain"

      - name: Upload license reports
        uses: actions/upload-artifact@v3
        with:
          name: license-reports
          path: |
            licenses-python.json
            licenses-frontend.json